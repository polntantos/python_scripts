#Query that selects all nodes that have no subclass

SELECT DISTINCT ?node WHERE {
  ?node a owl:Class .
  FILTER NOT EXISTS {
    ?subclass rdfs:subClassOf ?node .
    ?subclass a owl:Class .
    FILTER (?subclass != ?node)
  }
}

#Query that selects all starting nodes

PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>

SELECT DISTINCT ?node
WHERE {
  ?node a owl:Class .
  FILTER NOT EXISTS {
    ?node rdfs:subClassOf ?superclass .
    FILTER(?node != ?superclass)
  }
}

# get all classes

SELECT DISTINCT ?class
WHERE {
  ?s a ?class .
  FILTER (isURI(?class))
}

# count a class

SELECT (COUNT(?s) AS ?count)
WHERE {
  ?s a <http://omikron44/ontologies/products> .
}

# show all triples related to a product

SELECT ?p ?o
WHERE {
  { ?s ?p <http://omikron44/ontologies/products/id=2267149> . }
  UNION
  { <http://omikron44/ontologies/products/id=2267149> ?p ?o . }
}

# delete all brands

DELETE WHERE {
  ?s ?p ?o .
  FILTER (
    (isIRI(?s) && (strstarts(str(?s), "http://omikron44/ontologies/brands")))
    || (isIRI(?o) && (strstarts(str(?o), "http://omikron44/ontologies/brands")))
  )
}

# replace brand literal to brand object

PREFIX products: <http://omikron44/ontologies/products#>
PREFIX brands: <http://omikron44/ontologies/brands#>

DELETE {
  ?product <http://omikron44/ontologies/products#brand> ?oldBrand .
}
INSERT {
  ?product <http://omikron44/ontologies/products#brand> ?brand .
}
WHERE {
  ?product a <http://omikron44/ontologies/products>;
           <http://omikron44/ontologies/products#brand> ?oldBrand .
  ?brand a <http://omikron44/ontologies/brands>;
        <http://omikron44/ontologies/brands#brand> ?oldBrand .
}


#selects product brands

PREFIX products: <http://omikron44/ontologies/products#>
PREFIX brands: <http://omikron44/ontologies/brands#>

SELECT 
  ?product ?brand 
WHERE {
  ?product a <http://omikron44/ontologies/products>;
           <http://omikron44/ontologies/products#brand> ?brand .
}

# select product brands and their equal class id with their names
SELECT 
  ?product ?brand ?brandName
WHERE {
  ?product a <http://omikron44/ontologies/products>;
           <http://omikron44/ontologies/products#brand> ?brand .
  ?brand <http://omikron44/ontologies/brands#brand> ?brandName.
}

# select brands and their name
SELECT ?s ?name
WHERE {
  ?s a <http://omikron44/ontologies/brands> .
  ?s <http://omikron44/ontologies/brands#brand> ?name .
}

# get products and their brands
SELECT ?product ?title ?brand
WHERE {
  ?product a <http://omikron44/ontologies/products> .
  ?product <http://omikron44/ontologies/products#title> ?title.
  ?product <http://omikron44/ontologies/products#brand> ?brand .
}

#Get product titles and their URIs by their brand
SELECT ?product_uri ?title
WHERE {
    ?product_uri a <http://omikron44/ontologies/products> .
    ?product_uri <http://omikron44/ontologies/products#title> ?title.
    ?product_uri <http://omikron44/ontologies/products#brand> <http://omikron44/ontologies/brands/id=1> .
}

#selects count products that have object brands not literals

SELECT 
 (COUNT(?product) AS ?count)
WHERE {
  ?product a <http://omikron44/ontologies/products>;
           <http://omikron44/ontologies/products#brand> ?brand .
  ?brand a <http://omikron44/ontologies/brands>.
}

#note down the sparql-auth endpoint